/**
 * This file was generated by running `bun run generate` and should NOT be modified.
 */
import postmanRequestCommand, {
  Request,
} from "../../utils/postman-request-command";

export const request: Request = {
  method: "PATCH",
  url: {
    protocol: "https",
    host: ["api", "harvestapp", "com"],
    path: ["v2", "projects", ":project_id"],
    query: [
      {
        key: "client_id",
        value: "",
        description: "The ID of the client to associate this project with.",
        disabled: true,
      },
      {
        key: "name",
        value: "",
        description: "The name of the project.",
        disabled: true,
      },
      {
        key: "is_billable",
        value: "",
        description: "Whether the project is billable or not.",
        disabled: true,
      },
      {
        key: "bill_by",
        value: "",
        description:
          "The method by which the project is invoiced. Options: Project, Tasks, People, or none.",
        disabled: true,
      },
      {
        key: "budget_by",
        value: "",
        description:
          "The method by which the project is budgeted. Options, project, project_cost, task, task_fees, person, or none.",
        disabled: true,
      },
      {
        key: "is_active",
        value: "",
        description:
          "Whether the project is active or archived. Defaults to true",
        disabled: true,
      },
      {
        key: "is_fixed_fee",
        value: "",
        description: "Whether the project is a fixed-fee project or not.",
        disabled: true,
      },
      {
        key: "hourly_rate",
        value: "",
        description: "Rate for projects billed by Project Hourly Rate.",
        disabled: true,
      },
      {
        key: "budget",
        value: "",
        description:
          "The budget in hours for the project when budgeting by time.",
        disabled: true,
      },
      {
        key: "budget_is_monthly",
        value: "",
        description:
          "Option to have the budget reset every month. Defaults to false.",
        disabled: true,
      },
      {
        key: "notify_when_over_budget",
        value: "",
        description:
          "Whether project managers should be notified when the project goes over budget. Defaults to false.",
        disabled: true,
      },
      {
        key: "over_budget_notification_percentage",
        value: "",
        description:
          "Percentage value used to trigger over budget email alerts. Example: use 10.0 for 10.0%.",
        disabled: true,
      },
      {
        key: "show_budget_to_all",
        value: "",
        description:
          "Option to show project budget to all employees. Does not apply to Total Project Fee projects. Defaults to false.",
        disabled: true,
      },
      {
        key: "cost_budget",
        value: "",
        description:
          "The monetary budget for the project when budgeting by money.",
        disabled: true,
      },
      {
        key: "cost_budget_include_expenses",
        value: "",
        description:
          "Option for budget of Total Project Fees projects to include tracked expenses. Defaults to false.",
        disabled: true,
      },
      {
        key: "fee",
        value: "",
        description:
          "The amount you plan to invoice for the project. Only used by fixed-fee projects.",
        disabled: true,
      },
      {
        key: "notes",
        value: "",
        description: "Notes about the project.",
        disabled: true,
      },
      {
        key: "starts_on",
        value: "",
        description: "Date the project was started.",
        disabled: true,
      },
      {
        key: "ends_on",
        value: "",
        description: "Date the project will end.",
        disabled: true,
      },
    ],
    variable: [
      {
        key: "project_id",
        value: "",
        description: "The ID of the project you're retrieving.",
      },
    ],
  },
};
export const { command, aliases, describe, builder, handler } =
  postmanRequestCommand({
    command: "update",
    describe:
      "Updates the specific project by setting the values of the parameters passed",
    request,
  });
