/**
 * This file was generated by running `bun run generate` and should NOT be modified.
 */
import { execaCommand } from "execa";
import { expect, test } from "vitest";

test("hrvst invoices create", async () => {
  const { stdout } = await execaCommand(
    "node dist/cli.js invoices create --help",
  );
  expect(stdout).toMatchInlineSnapshot(`
    "cli.js invoices create

    Creates a new invoice object

    Options:
          --help                      Show help                            [boolean]
      -c, --client_id                 The ID of the client this invoice belongs to.
                                                                          [required]
      -r, --retainer_id               The ID of the retainer associated with this in
                                      voice.
      -e, --estimate_id               The ID of the estimate associated with this in
                                      voice.
      -n, --number                    If no value is set, the number will be automat
                                      ically generated.
      -p, --purchase_order            The purchase order number.
      -t, --tax                       This percentage is applied to the subtotal, in
                                      cluding line items and discounts. Example: use
                                       10.0 for 10.0%.
      -a, --tax2                      This percentage is applied to the subtotal, in
                                      cluding line items and discounts. Example: use
                                       10.0 for 10.0%.
      -d, --discount                  This percentage is subtracted from the subtota
                                      l. Example: use 10.0 for 10.0%.
      -s, --subject                   The invoice subject.
      -o, --notes                     Any additional notes to include on the invoice
                                      .
      -u, --currency                  The currency used by the invoice. If not provi
                                      ded, the client’s currency will be used. See a
                                       list of supported currencies
      -i, --issue_date                Date the invoice was issued. Defaults to today
                                      ’s date.
          --due_date                  Date the invoice is due. Defaults to the issue
                                      _date if no payment_term is specified.
      -y, --payment_term              The timeframe in which the invoice should be p
                                      aid. Defaults to custom. Options: upon receipt
                                      , net 15, net 30, net 45, or net 60.
      -l, --line_items[0]kind         The name of an invoice item category.
      -m, --line_items[0]description  Text description of the first line item.
          --line_items[0]unit_price   The individual price per unit.
      -q, --line_items[0]quantity     The unit quantity of the item.
      -x, --line_items[0]taxed        Whether the invoice’s tax percentage applies t
                                      o this line item.
          --line_items[0]taxed2       Whether the invoice’s tax2 percentage applies
                                      to this line item.
      -k, --line_items[1]kind         The name of an invoice item category.
          --line_items[1]description  Text description of the second line item.
          --line_items[1]unit_price   The individual price per unit.
          --line_items[1]quantity     The unit quantity of the item.
          --line_items[1]taxed        Whether the invoice’s tax percentage applies t
                                      o this line item.
          --line_items[1]taxed2       Whether the invoice’s tax2 percentage applies
                                      to this line item.
      -f, --fields                    Comma separated list of fields to display in t
                                      he output.
          --output                    The output format: json, table"
  `);
});
