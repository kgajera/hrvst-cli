"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[520],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},o=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),m=d(n),k=r,N=m["".concat(s,".").concat(k)]||m[k]||u[k]||l;return n?a.createElement(N,p(p({ref:t},o),{},{components:n})):a.createElement(N,p({ref:t},o))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,p=new Array(l);p[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var d=2;d<l;d++)p[d]=n[d];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6193:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={},p="Expenses",i={unversionedId:"cli/expenses/index",id:"cli/expenses/index",title:"Expenses",description:"Information pertaining to retrieving, creating, editing, and deleting expenses.",source:"@site/docs/cli/expenses/index.md",sourceDirName:"cli/expenses",slug:"/cli/expenses/",permalink:"/hrvst-cli/cli/expenses/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Estimate Messages",permalink:"/hrvst-cli/cli/estimates/messages"},next:{title:"Expense Categories",permalink:"/hrvst-cli/cli/expenses/categories"}},s={},d=[{value:"List all expenses",id:"list-all-expenses",level:2},{value:"Retrieve a specific expense",id:"retrieve-a-specific-expense",level:2},{value:"Create an expense",id:"create-an-expense",level:2},{value:"Update an expense",id:"update-an-expense",level:2},{value:"Delete an expense",id:"delete-an-expense",level:2}],o={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"expenses"},"Expenses"),(0,r.kt)("p",null,"Information pertaining to retrieving, creating, editing, and deleting expenses."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://help.getharvest.com/api-v2/expenses-api/expenses/expenses/"},"Link to documentation")),(0,r.kt)("h2",{id:"list-all-expenses"},"List all expenses"),(0,r.kt)("p",null,"Returns a list of your expenses. If accessing this endpoint as an Admin, all expenses in the account will be returned. The expenses are returned sorted by the ",(0,r.kt)("inlineCode",{parentName:"p"},"spent_at")," date, with the most recent expenses appearing first."),(0,r.kt)("p",null,"The response contains an object with a ",(0,r.kt)("inlineCode",{parentName:"p"},"expenses")," property that contains an array of up to ",(0,r.kt)("inlineCode",{parentName:"p"},"per_page")," expenses. Each entry in the array is a separate expense object. If no more expenses are available, the resulting array will be empty. Several additional pagination properties are included in the response to simplify paginating your expenses."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://help.getharvest.com/api-v2/expenses-api/expenses/expenses/#list-all-expenses"},"Link to documentation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hrvst expenses list\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--user_id")),(0,r.kt)("td",{parentName:"tr",align:null},"Only return expenses belonging to the user with the given ID."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--client_id")),(0,r.kt)("td",{parentName:"tr",align:null},"Only return expenses belonging to the client with the given ID."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--project_id")),(0,r.kt)("td",{parentName:"tr",align:null},"Only return expenses belonging to the project with the given ID."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--is_billed")),(0,r.kt)("td",{parentName:"tr",align:null},"Pass true to only return expenses that have been invoiced and false to return expenses that have not been invoiced."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--updated_since")),(0,r.kt)("td",{parentName:"tr",align:null},"Only return expenses that have been updated since the given date and time."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--from")),(0,r.kt)("td",{parentName:"tr",align:null},"Only return expenses with a spent_date on or after the given date."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--to")),(0,r.kt)("td",{parentName:"tr",align:null},"Only return expenses with a spent_date on or before the given date."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--page")),(0,r.kt)("td",{parentName:"tr",align:null},"The page number to use in pagination. Use ",(0,r.kt)("inlineCode",{parentName:"td"},"all")," to retrieve all pages."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--per_page")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of records to return per page. Can range between 1 and 2000."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated list of fields to display in the output."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output")),(0,r.kt)("td",{parentName:"tr",align:null},"The output format: json, table"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h2",{id:"retrieve-a-specific-expense"},"Retrieve a specific expense"),(0,r.kt)("p",null,"Retrieves the expense with the given ID. Returns an expense object and a ",(0,r.kt)("inlineCode",{parentName:"p"},"200 OK")," response code if a valid identifier was provided."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://help.getharvest.com/api-v2/expenses-api/expenses/expenses/#retrieve-an-expense"},"Link to documentation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hrvst expenses get\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--expense_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the expense you're retrieving."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated list of fields to display in the output."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output")),(0,r.kt)("td",{parentName:"tr",align:null},"The output format: json, table"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h2",{id:"create-an-expense"},"Create an expense"),(0,r.kt)("p",null,"Creates a new expense object. Returns an expense object and a ",(0,r.kt)("inlineCode",{parentName:"p"},"201 Created")," response code if the call succeeded."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://help.getharvest.com/api-v2/expenses-api/expenses/expenses/#create-an-expense"},"Link to documentation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hrvst expenses create\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--project_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the project associated with this expense."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--expense_category_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the expense category this expense is being tracked against."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--spent_date")),(0,r.kt)("td",{parentName:"tr",align:null},"Date the expense occurred."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--user_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the user associated with this expense. Defaults to the ID of the currently authenticated user."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--units")),(0,r.kt)("td",{parentName:"tr",align:null},"The quantity of units to use in calculating the total_cost of the expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--total_cost")),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of the expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--notes")),(0,r.kt)("td",{parentName:"tr",align:null},"Textual notes used to describe the expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--billable")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether this expense is billable or not. Defaults to true."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated list of fields to display in the output."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output")),(0,r.kt)("td",{parentName:"tr",align:null},"The output format: json, table"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h2",{id:"update-an-expense"},"Update an expense"),(0,r.kt)("p",null,"Updates the specific expense by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Returns an expense object and a ",(0,r.kt)("inlineCode",{parentName:"p"},"200 OK")," response code if the call succeeded."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://help.getharvest.com/api-v2/expenses-api/expenses/expenses/#update-an-expense"},"Link to documentation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hrvst expenses update\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--expense_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the expense you're updating."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--project_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the project associated with this expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--expense_category_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the expense category this expense is being tracked against."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--spent_date")),(0,r.kt)("td",{parentName:"tr",align:null},"Date the expense occurred."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--units")),(0,r.kt)("td",{parentName:"tr",align:null},"The quantity of units to use in calculating the total_cost of the expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--total_cost")),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of the expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--notes")),(0,r.kt)("td",{parentName:"tr",align:null},"Textual notes used to describe the expense."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--billable")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether this expense is billable or not."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--delete_receipt")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether an attached expense receipt should be deleted. Pass true to delete the expense receipt."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated list of fields to display in the output."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output")),(0,r.kt)("td",{parentName:"tr",align:null},"The output format: json, table"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h2",{id:"delete-an-expense"},"Delete an expense"),(0,r.kt)("p",null,"Delete an expense. Returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"200 OK")," response code if the call succeeded."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://help.getharvest.com/api-v2/expenses-api/expenses/expenses/#delete-an-expense"},"Link to documentation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hrvst expenses delete\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--expense_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the expense you're deleting."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Comma separated list of fields to display in the output."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output")),(0,r.kt)("td",{parentName:"tr",align:null},"The output format: json, table"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))))}u.isMDXComponent=!0}}]);